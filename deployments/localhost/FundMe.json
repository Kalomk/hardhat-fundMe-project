{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAdress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAdressToUsdAMount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x12500dc29d2dbe32e0eeb8ac2c68ff14cf73e3dfc2627fe72999eb8b8f008dcc",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "876731",
    "logsBloom": "0x
    "blockHash": "0x1c11f1b56ee88f2f67e2b8ef8ca046f80a4aa1aadd6b4f37a2ee761165e7b5e7",
    "transactionHash": "0x12500dc29d2dbe32e0eeb8ac2c68ff14cf73e3dfc2627fe72999eb8b8f008dcc",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "876731",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "66ced7ebb7d07001bce4f72ae5e1b009",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAdress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAdressToUsdAMount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"contracts/PriceConventer.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n\\nusing PriceConventer for uint256;\\n\\n\\nconstructor(address priceFeedAdress){\\n    i_owner = msg.sender;\\n    s_priceFeed = AggregatorV3Interface(priceFeedAdress);\\n}\\n\\naddress immutable private i_owner;\\nAggregatorV3Interface public s_priceFeed;\\naddress[] private s_funders;\\nmapping (address => uint256) private s_AdressToUsdAMount;\\nuint256 public constant minimumUsd = 50 * 1e18;\\n\\n    function fund() public payable {\\nrequire(msg.value.getEthAmount(s_priceFeed) >= minimumUsd,\\\"You need to spend more ETH\\\");\\ns_funders.push(msg.sender);\\ns_AdressToUsdAMount[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\naddress[] memory funders = s_funders;\\nfor(uint256 _fundIndex = 0; _fundIndex < funders.length; _fundIndex++){\\naddress funder = funders[_fundIndex];\\ns_AdressToUsdAMount[funder] = 0;\\n}\\ns_funders = new address[](0);\\n(bool callSuccess, ) = payable (msg.sender).call{value:address(this).balance}(\\\"\\\");\\nrequire(callSuccess,\\\"Withdrdaw dosent exist\\\");\\n    }\\n\\n\\n   modifier onlyOwner{\\nif(msg.sender != i_owner){\\n    revert FundMe__NotOwner();\\n}\\n_;\\n   }\\n\\n   function getOwner() public view returns(address){\\n    return i_owner;\\n   }\\n\\n   function getFunders(uint256 index) public view returns(address){\\n    return s_funders[index];\\n   }\\n\\n    function getAdressToUsdAMount(address funder) public view returns(uint256){\\n    return s_AdressToUsdAMount[funder];\\n   }\\n\\n   function getPriceFeed() public view returns(AggregatorV3Interface){\\n    return s_priceFeed;\\n   }\\n//    receive() external  payable {\\n//        fund();\\n//    }\\n//    fallback() external  payable {\\n//        fund();\\n//    }\\n}\",\"keccak256\":\"0xa05ea28b791c89e034265ad0b8ec06cc74dcdafe149241dc3b219442355f38a4\",\"license\":\"MIT\"},\"contracts/PriceConventer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConventer{\\n     function getPrice(AggregatorV3Interface priceFeed) public view  returns(uint256){\\n(,int256 price,,,) = priceFeed.latestRoundData();\\nreturn uint256(price * 1e10);\\n    }\\n    function getEthAmount(uint256 ethAmount,AggregatorV3Interface priceFeed) internal  view returns(uint256) {\\n uint256 price = getPrice(priceFeed);\\n return (ethAmount * price) / 1e18;\\n    }\\n}\",\"keccak256\":\"0x4da8a24f68a7b499ff6c307bef123ae306e6318f8ca76671d87dbe050d351850\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80634cb19be91161004e5780634cb19be91461012a578063893d20e8146101675780639e87a5cd14610192578063b60d4288146101bd5761007b565b8063098de820146100805780630ec3b027146100ab5780633a7b6c74146100d65780633ccfd60b14610113575b600080fd5b34801561008c57600080fd5b506100956101c7565b6040516100a2919061083f565b60405180910390f35b3480156100b757600080fd5b506100c06101d4565b6040516100cd91906108d9565b60405180910390f35b3480156100e257600080fd5b506100fd60048036038101906100f89190610925565b6101f8565b60405161010a9190610973565b60405180910390f35b34801561011f57600080fd5b50610128610240565b005b34801561013657600080fd5b50610151600480360381019061014c91906109ba565b6104e5565b60405161015e919061083f565b60405180910390f35b34801561017357600080fd5b5061017c61052e565b6040516101899190610973565b60405180910390f35b34801561019e57600080fd5b506101a7610556565b6040516101b491906108d9565b60405180910390f35b6101c561057f565b005b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001828154811061020e5761020d6109e7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c5576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561034957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102ff575b5050505050905060005b81518110156103d4576000828281518110610371576103706109e7565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103cc90610a45565b915050610353565b50600067ffffffffffffffff8111156103f0576103ef610a8d565b5b60405190808252806020026020018201604052801561041e5781602001602082028036833780820191505090505b506001908051906020019061043492919061077f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161045b90610aed565b60006040518083038185875af1925050503d8060008114610498576040519150601f19603f3d011682016040523d82523d6000602084013e61049d565b606091505b50509050806104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890610b5f565b60405180910390fd5b5050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006105bc60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106b890919063ffffffff16565b10156105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f490610bcb565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106af9190610beb565b92505081905550565b6000806106c4836106ee565b9050670de0b6b3a764000081856106db9190610c1f565b6106e59190610c90565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561073c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107609190610d4e565b5050509150506402540be400816107779190610dc9565b915050919050565b8280548282559060005260206000209081019282156107f8579160200282015b828111156107f75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061079f565b5b5090506108059190610809565b5090565b5b8082111561082257600081600090555060010161080a565b5090565b6000819050919050565b61083981610826565b82525050565b60006020820190506108546000830184610830565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061089f61089a6108958461085a565b61087a565b61085a565b9050919050565b60006108b182610884565b9050919050565b60006108c3826108a6565b9050919050565b6108d3816108b8565b82525050565b60006020820190506108ee60008301846108ca565b92915050565b600080fd5b61090281610826565b811461090d57600080fd5b50565b60008135905061091f816108f9565b92915050565b60006020828403121561093b5761093a6108f4565b5b600061094984828501610910565b91505092915050565b600061095d8261085a565b9050919050565b61096d81610952565b82525050565b60006020820190506109886000830184610964565b92915050565b61099781610952565b81146109a257600080fd5b50565b6000813590506109b48161098e565b92915050565b6000602082840312156109d0576109cf6108f4565b5b60006109de848285016109a5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a5082610826565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a8257610a81610a16565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ad7600083610abc565b9150610ae282610ac7565b600082019050919050565b6000610af882610aca565b9150819050919050565b600082825260208201905092915050565b7f57697468647264617720646f73656e7420657869737400000000000000000000600082015250565b6000610b49601683610b02565b9150610b5482610b13565b602082019050919050565b60006020820190508181036000830152610b7881610b3c565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448000000000000600082015250565b6000610bb5601a83610b02565b9150610bc082610b7f565b602082019050919050565b60006020820190508181036000830152610be481610ba8565b9050919050565b6000610bf682610826565b9150610c0183610826565b9250828201905080821115610c1957610c18610a16565b5b92915050565b6000610c2a82610826565b9150610c3583610826565b9250828202610c4381610826565b91508282048414831517610c5a57610c59610a16565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c9b82610826565b9150610ca683610826565b925082610cb657610cb5610c61565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ce081610cc1565b8114610ceb57600080fd5b50565b600081519050610cfd81610cd7565b92915050565b6000819050919050565b610d1681610d03565b8114610d2157600080fd5b50565b600081519050610d3381610d0d565b92915050565b600081519050610d48816108f9565b92915050565b600080600080600060a08688031215610d6a57610d696108f4565b5b6000610d7888828901610cee565b9550506020610d8988828901610d24565b9450506040610d9a88828901610d39565b9350506060610dab88828901610d39565b9250506080610dbc88828901610cee565b9150509295509295909350565b6000610dd482610d03565b9150610ddf83610d03565b9250828202610ded81610d03565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610e2557610e24610a16565b5b8282058414831517610e3a57610e39610a16565b5b509291505056fea2646970667358221220e69a5ba5eaf8506ee5d3a4b2b69f005c734d160175f700d36a83b85ae4270c4364736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 76,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 79,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 83,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_AdressToUsdAMount",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}